mocking javascript functions
goal - make test deterministic, know the outcome of the function

taking a function that would generate a new random result every run, and mocking it to return the same result every time makes the test deterministic, allowing us to know that every time we run our test, it is going to have the same result

this acts as a control - allows us to test other functions, knowing that the behavior for a certain function is known through mocking it

need to make sure that after mocking a test that we reset the function mocked to be the original function

monkey-patching is the practice of setting a variable to store the original value of a function, then overwriting the original value of a function to mock that function by a simplified guaranteed result function - needed because it is used internally in a different function being tested - and then after the test has been run resetting the modified mock version of a function to be the original value of the function by using the temporarily stored value


monkey patching only works with common js, not esmodules

jest.mock API allows you to mock esmodules
jest.mock takes two parameters
1 - path to the module you are mocking, relative to where jest.mock is being called
2 - a module factory function - returns the mocked version of the module

jest.mock works because it puts jest in control of the whole module system

require.cache is a collection of all the files in a system's environment
you can decorate/change what is being imported in by using require.resolve on a file path
you can then overwrite as is done in mock-fn
you overwrite module.exports by specifying a different exports in the object that you create here
this will change what is imported when doing the require statement
important that this change occurs before the require statement is performed
it is important to reset whatever you do with require.cache after its intended use - this impacts all other files that need what you are overwriting 

this actually works exactly the same way as jest.mock works - when transpiled, jest.mock is moved above the written require statements